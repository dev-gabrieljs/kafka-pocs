# Nome do topico Kafka utilizado pelo Producer e Consumer
kafka.topic.name=meu-topico
# O topico Kafka que o Producer enviara e o Consumer ouvira.

# Configuracao do Kafka Broker (onde o Kafka esta rodando)
spring.kafka.bootstrap-servers=localhost:9092
# Endereco do servidor Kafka. Nesse caso, esta rodando localmente na porta 9092.
# Caso tenha mais de um broker, voce pode listar varios servidores, separados por virgula: localhost:9092,localhost:9093

# Configuracao do Consumer Kafka
spring.kafka.consumer.group-id=my-group-id
# O ID do grupo do consumidor. Consumidores com o mesmo group-id compartilham a carga de mensagens.
# A utilizacao de diferentes grupos permite o processamento paralelo sem duplicacao de mensagens.

spring.kafka.consumer.auto-offset-reset=earliest
# Define como o Consumer ira lidar com o offset:
# "earliest" - comeca a ler as mensagens do inicio do topico (todas as mensagens, incluindo as passadas).
# "latest" - comeca a ler a partir da ultima mensagem disponivel no topico.
# "none" - Lanca um erro caso o offset nao esteja disponivel.

# Configuracao do Producer Kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# Define o serializador para a chave da mensagem do Producer. Aqui estamos usando um StringSerializer.
# Isso converte a chave da mensagem para uma String antes de envia-la para o Kafka.

spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Define o serializador para o valor da mensagem do Producer. Tambem estamos usando um StringSerializer.
# Isso converte o valor da mensagem para uma String antes de envia-la para o Kafka.

# Configuracao do Consumer Kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Define o deserializador para a chave da mensagem do Consumer. Aqui usamos StringDeserializer.
# Isso converte a chave da mensagem recebida de volta para uma String.

spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Define o deserializador para o valor da mensagem do Consumer. Usamos StringDeserializer aqui tambem.
# Isso converte o valor da mensagem recebida de volta para uma String.
